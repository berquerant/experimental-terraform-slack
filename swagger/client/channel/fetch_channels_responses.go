// Code generated by go-swagger; DO NOT EDIT.

package channel

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/berquerant/terraform-slack/swagger/models"
)

// FetchChannelsReader is a Reader for the FetchChannels structure.
type FetchChannelsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *FetchChannelsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewFetchChannelsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewFetchChannelsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewFetchChannelsOK creates a FetchChannelsOK with default headers values
func NewFetchChannelsOK() *FetchChannelsOK {
	return &FetchChannelsOK{}
}

/*
FetchChannelsOK describes a response with status code 200, with default header values.

Success
*/
type FetchChannelsOK struct {
	Payload *models.ChannelsModel
}

// IsSuccess returns true when this fetch channels o k response has a 2xx status code
func (o *FetchChannelsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this fetch channels o k response has a 3xx status code
func (o *FetchChannelsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this fetch channels o k response has a 4xx status code
func (o *FetchChannelsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this fetch channels o k response has a 5xx status code
func (o *FetchChannelsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this fetch channels o k response a status code equal to that given
func (o *FetchChannelsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the fetch channels o k response
func (o *FetchChannelsOK) Code() int {
	return 200
}

func (o *FetchChannelsOK) Error() string {
	return fmt.Sprintf("[GET /channels][%d] fetchChannelsOK  %+v", 200, o.Payload)
}

func (o *FetchChannelsOK) String() string {
	return fmt.Sprintf("[GET /channels][%d] fetchChannelsOK  %+v", 200, o.Payload)
}

func (o *FetchChannelsOK) GetPayload() *models.ChannelsModel {
	return o.Payload
}

func (o *FetchChannelsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ChannelsModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFetchChannelsDefault creates a FetchChannelsDefault with default headers values
func NewFetchChannelsDefault(code int) *FetchChannelsDefault {
	return &FetchChannelsDefault{
		_statusCode: code,
	}
}

/*
FetchChannelsDefault describes a response with status code -1, with default header values.

Error
*/
type FetchChannelsDefault struct {
	_statusCode int

	Payload *models.ErrorModel
}

// IsSuccess returns true when this fetch channels default response has a 2xx status code
func (o *FetchChannelsDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this fetch channels default response has a 3xx status code
func (o *FetchChannelsDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this fetch channels default response has a 4xx status code
func (o *FetchChannelsDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this fetch channels default response has a 5xx status code
func (o *FetchChannelsDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this fetch channels default response a status code equal to that given
func (o *FetchChannelsDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the fetch channels default response
func (o *FetchChannelsDefault) Code() int {
	return o._statusCode
}

func (o *FetchChannelsDefault) Error() string {
	return fmt.Sprintf("[GET /channels][%d] fetchChannels default  %+v", o._statusCode, o.Payload)
}

func (o *FetchChannelsDefault) String() string {
	return fmt.Sprintf("[GET /channels][%d] fetchChannels default  %+v", o._statusCode, o.Payload)
}

func (o *FetchChannelsDefault) GetPayload() *models.ErrorModel {
	return o.Payload
}

func (o *FetchChannelsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
