// Code generated by go-swagger; DO NOT EDIT.

package channel

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/berquerant/terraform-slack/swagger/models"
)

// FetchChannelReader is a Reader for the FetchChannel structure.
type FetchChannelReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *FetchChannelReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewFetchChannelOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewFetchChannelDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewFetchChannelOK creates a FetchChannelOK with default headers values
func NewFetchChannelOK() *FetchChannelOK {
	return &FetchChannelOK{}
}

/*
FetchChannelOK describes a response with status code 200, with default header values.

Success
*/
type FetchChannelOK struct {
	Payload *models.ChannelModel
}

// IsSuccess returns true when this fetch channel o k response has a 2xx status code
func (o *FetchChannelOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this fetch channel o k response has a 3xx status code
func (o *FetchChannelOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this fetch channel o k response has a 4xx status code
func (o *FetchChannelOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this fetch channel o k response has a 5xx status code
func (o *FetchChannelOK) IsServerError() bool {
	return false
}

// IsCode returns true when this fetch channel o k response a status code equal to that given
func (o *FetchChannelOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the fetch channel o k response
func (o *FetchChannelOK) Code() int {
	return 200
}

func (o *FetchChannelOK) Error() string {
	return fmt.Sprintf("[GET /channel][%d] fetchChannelOK  %+v", 200, o.Payload)
}

func (o *FetchChannelOK) String() string {
	return fmt.Sprintf("[GET /channel][%d] fetchChannelOK  %+v", 200, o.Payload)
}

func (o *FetchChannelOK) GetPayload() *models.ChannelModel {
	return o.Payload
}

func (o *FetchChannelOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ChannelModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFetchChannelDefault creates a FetchChannelDefault with default headers values
func NewFetchChannelDefault(code int) *FetchChannelDefault {
	return &FetchChannelDefault{
		_statusCode: code,
	}
}

/*
FetchChannelDefault describes a response with status code -1, with default header values.

Error
*/
type FetchChannelDefault struct {
	_statusCode int

	Payload *models.ErrorModel
}

// IsSuccess returns true when this fetch channel default response has a 2xx status code
func (o *FetchChannelDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this fetch channel default response has a 3xx status code
func (o *FetchChannelDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this fetch channel default response has a 4xx status code
func (o *FetchChannelDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this fetch channel default response has a 5xx status code
func (o *FetchChannelDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this fetch channel default response a status code equal to that given
func (o *FetchChannelDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the fetch channel default response
func (o *FetchChannelDefault) Code() int {
	return o._statusCode
}

func (o *FetchChannelDefault) Error() string {
	return fmt.Sprintf("[GET /channel][%d] fetchChannel default  %+v", o._statusCode, o.Payload)
}

func (o *FetchChannelDefault) String() string {
	return fmt.Sprintf("[GET /channel][%d] fetchChannel default  %+v", o._statusCode, o.Payload)
}

func (o *FetchChannelDefault) GetPayload() *models.ErrorModel {
	return o.Payload
}

func (o *FetchChannelDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
