// Code generated by go-swagger; DO NOT EDIT.

package channel

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/berquerant/terraform-slack/swagger/models"
)

// UpdateChannelOKCode is the HTTP code returned for type UpdateChannelOK
const UpdateChannelOKCode int = 200

/*
UpdateChannelOK Success

swagger:response updateChannelOK
*/
type UpdateChannelOK struct {

	/*
	  In: Body
	*/
	Payload *models.ChannelModel `json:"body,omitempty"`
}

// NewUpdateChannelOK creates UpdateChannelOK with default headers values
func NewUpdateChannelOK() *UpdateChannelOK {

	return &UpdateChannelOK{}
}

// WithPayload adds the payload to the update channel o k response
func (o *UpdateChannelOK) WithPayload(payload *models.ChannelModel) *UpdateChannelOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update channel o k response
func (o *UpdateChannelOK) SetPayload(payload *models.ChannelModel) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateChannelOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
UpdateChannelDefault Error

swagger:response updateChannelDefault
*/
type UpdateChannelDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.ErrorModel `json:"body,omitempty"`
}

// NewUpdateChannelDefault creates UpdateChannelDefault with default headers values
func NewUpdateChannelDefault(code int) *UpdateChannelDefault {
	if code <= 0 {
		code = 500
	}

	return &UpdateChannelDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the update channel default response
func (o *UpdateChannelDefault) WithStatusCode(code int) *UpdateChannelDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the update channel default response
func (o *UpdateChannelDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the update channel default response
func (o *UpdateChannelDefault) WithPayload(payload *models.ErrorModel) *UpdateChannelDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update channel default response
func (o *UpdateChannelDefault) SetPayload(payload *models.ErrorModel) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateChannelDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
